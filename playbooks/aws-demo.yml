---
# Basic provisioning example
- name: Create AWS resources
  hosts: localhost
  vars:
    config_file: "{{ lookup('env', 'OS_CLIENT_CONFIG_FILE') }}"
  connection: local
  gather_facts: False

  tasks:
    - include_vars: "{{ config_file }}"
    - name: Create a security group
      ec2_group:
        name: ansible
        description: "Ansible Security Group"
        region: "{{aws_region}}"
        vpc_id: "{{vpc_id}}"
        aws_access_key: "{{ clouds.devstack.auth.AWS_ACCESS_KEY_ID }}"
        aws_secret_key: "{{ clouds.devstack.auth.AWS_SECRET_ACCESS_KEY }}"
        rules:
          - proto: all
            cidr_ip: "{{cidr_ip}}"
          - proto: all
            group_name: ansible
        rules_egress:
          - proto: all
            cidr_ip: 0.0.0.0/0
      register: firewall

    - name: Create an EC2 instance
      ec2:
        aws_access_key: "{{ clouds.devstack.auth.AWS_ACCESS_KEY_ID }}"
        aws_secret_key: "{{ clouds.devstack.auth.AWS_SECRET_ACCESS_KEY }}"
        key_name: "{{key_name}}"
        region: "{{aws_region}}"
        group_id: "{{firewall.group_id}}"
        instance_type: "{{instance_type}}"
        image: "{{ami_id}}"
        wait: yes
        volumes:
          - device_name: /dev/sda1
            volume_type: gp2
            volume_size: 100
            delete_on_termination: true
        exact_count: "{{instance_count}}"
        count_tag:
          Name: ansible-demo
        instance_tags:
          Name: ansible-demo
      register: ec2
